[{"C:\\Users\\draga\\Desktop\\projects\\registration\\web\\src\\index.tsx":"1","C:\\Users\\draga\\Desktop\\projects\\registration\\web\\src\\generated\\graphql.tsx":"2","C:\\Users\\draga\\Desktop\\projects\\registration\\web\\src\\Routes.tsx":"3","C:\\Users\\draga\\Desktop\\projects\\registration\\web\\src\\pages\\Login.tsx":"4","C:\\Users\\draga\\Desktop\\projects\\registration\\web\\src\\pages\\Home.tsx":"5","C:\\Users\\draga\\Desktop\\projects\\registration\\web\\src\\pages\\Register.tsx":"6","C:\\Users\\draga\\Desktop\\projects\\registration\\web\\src\\pages\\Bye.tsx":"7","C:\\Users\\draga\\Desktop\\projects\\registration\\web\\src\\accessToken.ts":"8","C:\\Users\\draga\\Desktop\\projects\\registration\\web\\src\\App.tsx":"9","C:\\Users\\draga\\Desktop\\projects\\registration\\web\\src\\Header.tsx":"10"},{"size":1173,"mtime":1612453429641,"results":"11","hashOfConfig":"12"},{"size":12510,"mtime":1612457360415,"results":"13","hashOfConfig":"12"},{"size":683,"mtime":1612454318531,"results":"14","hashOfConfig":"12"},{"size":1620,"mtime":1612455908573,"results":"15","hashOfConfig":"12"},{"size":617,"mtime":1612383396716,"results":"16","hashOfConfig":"12"},{"size":1123,"mtime":1612426771860,"results":"17","hashOfConfig":"12"},{"size":554,"mtime":1612431963181,"results":"18","hashOfConfig":"12"},{"size":166,"mtime":1612457537827,"results":"19","hashOfConfig":"12"},{"size":1072,"mtime":1612431591470,"results":"20","hashOfConfig":"12"},{"size":1115,"mtime":1612457712704,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gvmvyo",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\draga\\Desktop\\projects\\registration\\web\\src\\index.tsx",[],"C:\\Users\\draga\\Desktop\\projects\\registration\\web\\src\\generated\\graphql.tsx",[],"C:\\Users\\draga\\Desktop\\projects\\registration\\web\\src\\Routes.tsx",["45"],"C:\\Users\\draga\\Desktop\\projects\\registration\\web\\src\\pages\\Login.tsx",[],"C:\\Users\\draga\\Desktop\\projects\\registration\\web\\src\\pages\\Home.tsx",["46"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useUsersQuery } from '../generated/graphql'\r\n\r\ninterface Props{}\r\n\r\nconst Home:React.FC<Props> = () => {\r\n\r\n    const {data} = useUsersQuery({fetchPolicy: 'network-only'})\r\n\r\n    if (!data) {\r\n        return <div>Loading...</div>\r\n    }\r\n    return (\r\n        <div>\r\n          <h1>Users:</h1>\r\n          <ul>\r\n              {data.users.map(x =>{\r\n                  return(\r\n                    <li key={x.id}>{x.email}, {x.id} </li>\r\n                  )\r\n              })}\r\n          </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n",["47","48"],"C:\\Users\\draga\\Desktop\\projects\\registration\\web\\src\\pages\\Register.tsx",["49"],"import React, { useState } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { useRegisterMutation } from \"../generated/graphql\";\r\n\r\nconst Register: React.FC<RouteComponentProps> = ({ history }) => {\r\n  const [email, setemail] = useState(\"\");\r\n  const [password, setpassword] = useState(\"\");\r\n  const [register] = useRegisterMutation();\r\n\r\n  return (\r\n    <form\r\n      onSubmit={async (e) => {\r\n        e.preventDefault();\r\n        const response = await register({\r\n          variables: {\r\n            email,\r\n            password,\r\n          },\r\n        });\r\n        history.push(\"/\");\r\n      }}\r\n    >\r\n      <div>\r\n        <input\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) => setemail(e.target.value)}\r\n          placeholder=\"email\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setpassword(e.target.value)}\r\n          placeholder=\"password\"\r\n        />\r\n      </div>\r\n      <button type=\"submit\">Register</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","C:\\Users\\draga\\Desktop\\projects\\registration\\web\\src\\pages\\Bye.tsx",[],"C:\\Users\\draga\\Desktop\\projects\\registration\\web\\src\\accessToken.ts",[],"C:\\Users\\draga\\Desktop\\projects\\registration\\web\\src\\App.tsx",[],"C:\\Users\\draga\\Desktop\\projects\\registration\\web\\src\\Header.tsx",[],{"ruleId":"50","severity":1,"message":"51","line":2,"column":25,"nodeType":"52","messageId":"53","endLine":2,"endColumn":29},{"ruleId":"50","severity":1,"message":"51","line":2,"column":10,"nodeType":"52","messageId":"53","endLine":2,"endColumn":14},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"50","severity":1,"message":"58","line":14,"column":15,"nodeType":"52","messageId":"53","endLine":14,"endColumn":23},"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-native-reassign",["59"],"no-negated-in-lhs",["60"],"'response' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]